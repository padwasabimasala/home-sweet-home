"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Resources
"
" http://rayninfo.co.uk/vimtips.html
" http://bbs.archlinux.org/viewtopic.php?pid=384883#p384883
" http://www.stripey.com/vim/vimrc.html
" http://github.com/hashrocket/dotmatrix/blob/master/.vimrc
" http://nvie.com/posts/how-i-boosted-my-vim/
"
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Notes
"
" map:  normal and visual mode
" map!: insert and cmd-line mode
" imap: insert mode
" vmap: visual mode
"
" Terminal Colors
"
" For iterm2 under the termminatl tab in preferences set the identifier to xterm-256color
"
" Ruby Blocks
"
" Select a whole outter block with var or inner block with vir
"
" Syntax Check - enable/disable
"
" :SyntasticToggleMode t
"
" Indent HTML
" :filetype indent on
" :set filetype=html
" :set smartindent
" gg=G
"
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

set nocompatible

" Tell vim it's in a 256 color terminal
if &term =~# '^\(screen\|xterm\)$'
  set t_Co=256
endif

" https://github.com/sunaku/.vim/blob/config/config/color.vim#L11-L16
if &term =~ '256color'
  " disable Background Color Erase (BCE) so that color schemes
  " render properly when inside 256-color tmux and GNU screen.
  " see also http://snk.tuxfamily.org/log/vim-256color-bce.html
  set t_ut=
endif

set shellcmdflag=-c

" Required for vim-textobj-rubyblock
runtime macros/matchit.vim
if has("autocmd")
  filetype indent plugin on
endif

syntax on
set backspace=2
set ts=2
set sw=2
set sts=2
set expandtab " Convert tabs to spaces
set autoindent
set ignorecase
set smartcase " overrides ignorecase if uppercase used in search string
set lbr " wrap on spaces not hard wrap
set bg=dark
set showmode
set showcmd
set hls " Highlight search
set history=50
set pastetoggle=<F2>
set modeline " Show filename in bar
set ls=2
colorscheme elflord
colorscheme distinguished
hi Operator        guifg=#6699CC     guibg=NONE        gui=NONE      ctermfg=lightblue   ctermbg=NONE        cterm=NONE

let mapleader=","

" Let \ clear the search highlighting
noremap <silent> \ :let @/=""<cr>
" Let H toggle highlighting
noremap <silent> H :set hls!<CR>

" Capitalize word
inoremap <c-U> <esc>he<c-v>bU

" center screen on search terms
nnoremap n nzz
nnoremap N Nzz

" remap j and k so that they move one screen line even when file lines wrap
noremap j gj
noremap k gk

" Map kj to <Esc> during insert mode
inoremap kj <Esc>

" Move windows quickly
noremap <C-h> <C-w>h
noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l

" Save as root
cmap w!! w !sudo tee % >/dev/null

" Breaks forward search on line :(
" nnoremap ; :

" Jump to matching brace with ease
noremap [ %

" Format into paragraphs with Q
vnoremap Q gq
nnoremap Q gqap

" replace word under cursor
:nnoremap <Leader>s :%s/\<<C-r><C-w>\>/

" Quickly edit/reload the vimrc file
nnoremap <silent> <leader>ev :e $MYVIMRC<CR>
" TODO : make this work as :reload
nnoremap <silent> <leader>sv :so $MYVIMRC<CR>

" rspec the current file
" TODO make this find spec for current file if it is not spec
nmap <silent> <leader>r :! rspec %<CR>
nmap <silent> <leader>R :! bundle exec rspec <CR>
nmap <silent> <leader>b :! bash %<CR>
command! RcReload :so $MYVIMRC
command! RcEdit :new $MYVIMRC

" remember between sessions, but only 10 search terms; also
" remember info for 10 files, but never any on removable disks, don't remember
" marks in files, don't rehighlight old search patterns, and only save up to
" 100 lines of registers; including @10 in there should restrict input buffer
" but it causes an error for me:
set viminfo=/10,'10,r/mnt/zip,r/mnt/floppy,f0,h,\"100

" Don't clear the screen when closing. Try :norestorescreen on Win32
" http://vieditor.tribe.net/thread/c0cb220e-4957-4a67-a465-ef7c74cf497a
" :set t_ti= t_te=

" smart indention for *.py files http://py.vaults.ca/~x/python_and_vim.html
autocmd BufRead *.py set smartindent cinwords=if,elif,else,for,while,try,except,finally,def,class
